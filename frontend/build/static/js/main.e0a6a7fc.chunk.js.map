{"version":3,"sources":["components/Conn/user.context.js","components/Conn/Login.js","components/Conn/Register.js","components/Home/HomePage.js","App.js","serviceWorker.js","index.js","components/Dashboard.js"],"names":["createContext","user","cb","require","Login","props","geyuser","useContext","userContext","console","log","useState","data","setData","email","setEmail","password","setPassword","RegisterSchema","Yup","shape","required","min","max","initialValues","onSubmit","Axios","method","withCredentials","url","then","res","setTimeout","history","push","validationSchema","className","icon","color","size","type","name","placeholder","onKeyUp","e","target","value","component","href","Register","get","setUser","username","values","HomePage","App","setUsername","Provider","Home","exact","path","Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","library","add","faCheckSquare","faCoffee","faUser","faEnvelope","faLock","faDivide","faUnlock","faUserClock","faUserEdit"],"mappings":"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","file":"static/js/main.e0a6a7fc.chunk.js","sourcesContent":["import {createContext} from 'react';\r\n\r\nexport default createContext({\r\n    user:'WWW@xxx.pov',\r\n    cb: ()=>null\r\n});\r\n\r\n\r\n","import React, { useState, useContext } from 'react'\r\nimport Axios from 'axios';\r\nimport {Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n//import queryString from 'query-string'\r\nimport userContext from './user.context';\r\nimport './login.scss';\r\nrequire('../Dashboard');\r\n\r\n\r\n\r\nexport const Login = (props) => {\r\n  const geyuser = useContext(userContext);\r\n  //const params = queryString.parse(props.location.search);\r\n  console.log(props);\r\n  const [data, setData] =useState('');\r\n  const [email, setEmail] =useState(null);\r\n  const [password, setPassword] =useState('');\r\n  const RegisterSchema = Yup.object().shape({\r\n    email: Yup.string().email('Invalid email').required('Required'),\r\n    password: Yup.string().required('Required').min(5, 'Too Short!').max(40, 'Too Long!'),\r\n  });\r\n  \r\n  const handleLogin =()=>{\r\n    Axios({\r\n      method:\"POST\",\r\n      data:{\r\n      email:email ? email : geyuser.user,\r\n      password:password\r\n      },\r\n      withCredentials:true,\r\n      url:\"http://localhost:4000/login\"\r\n  }).then((res)=>{\r\n      console.log(res);\r\n      setData(res.data);\r\n      if (res.data === 'chmpine'){\r\n        setTimeout(() => {\r\n          props.history.push('/')\r\n        }, 1000);\r\n    }\r\n  });\r\n  }\r\n  return (\r\n    <Formik\r\n    initialValues= {{email:geyuser.user, password: '' }}\r\n    onSubmit = {handleLogin}\r\n    validationSchema={RegisterSchema}\r\n  >\r\n    {() => (\r\n     \r\n                         <div className=\"login\">\r\n                         <div className=\"wrap\">\r\n                             <div className=\"card-header border-0 pb-0\">\r\n                                 <div className=\"card-title text-center\">\r\n                                     <h1>Login</h1>\r\n                                    {data ? <span className=\"alert alert-info\">{data}</span> : null}\r\n                                 </div>\r\n                             </div>\r\n                             <Form>\r\n                         <div className=\"form-group row\">\r\n                         <div className=\"col-1\"><FontAwesomeIcon icon={email ? \"user-edit\" :\"user\"} color={ email ? \"green\" : \"blue\"} size=\"2x\"/></div>\r\n                         <div className=\"col-10 col-sm-11\"><Field  type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Your email\" onKeyUp={e => setEmail(e.target.value)}/>\r\n                         <ErrorMessage name=\"email\" component=\"div\" className=\"alert alert-danger\"/></div>\r\n                         </div>\r\n                         <div className=\"form-group row\">\r\n                           <div className=\"col-1\"><FontAwesomeIcon icon={password ? \"unlock\" :\"lock\"} color={ password ? \"green\" : \"blue\"} size=\"2x\"/></div>\r\n                           <div className=\"col-10 col-sm-11\"><Field type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Enter Password\" onKeyUp={e => setPassword(e.target.value)}/>\r\n                         <ErrorMessage name=\"password\" component=\"div\" className=\"alert alert-danger\"/></div>\r\n                         \r\n                         </div>\r\n                         <div className=\"card-body\">\r\n                         <input type=\"submit\" value=\"Login\"/>\r\n                         </div>\r\n                         <div className=\"card-body\">\r\n                             <a href=\"/register\">\r\n                              <span></span>\r\n                              <span></span>\r\n                              <span></span>\r\n                              <span></span>\r\n                              Register\r\n                            </a>\r\n                         </div>\r\n                             </Form>\r\n                        </div>\r\n                        </div>\r\n                 \r\n    )}\r\n  </Formik>\r\n)\r\n}\r\n","import React, { useState, useContext } from 'react';\r\nimport Axios from 'axios';\r\nimport {Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup';\r\nimport setUser from './user.context';\r\nimport './register.scss';\r\n\r\n\r\n\r\nexport const Register = (props) => {\r\n    const get =useContext(setUser)\r\n    const [data, setData] =useState('');\r\n    const RegisterSchema = Yup.object().shape({\r\n        username: Yup.string().required('Required'),\r\n        email: Yup.string().email('Invalid email').required('Required'),\r\n        password: Yup.string().required('Required').min(5, 'Too Short!').max(40, 'Too Long!'),\r\n      });\r\n    const handleSubmit = (values)=>{\r\n        get.cb(values.email)\r\n        //console.log(username, email)\r\n        Axios({\r\n            method:\"POST\",\r\n            data:{\r\n            username:values.username,\r\n            email:values.email,\r\n            password:values.password\r\n            },\r\n            withCredentials:true,\r\n            url:\"http://localhost:4000/register\"\r\n        }).then((res)=>{\r\n            setData(res.data);\r\n            if (res.data === 'user created and now the pass is so Hard'){\r\n                props.history.push('/login');\r\n            }\r\n        });\r\n    };\r\n    return (\r\n        <Formik\r\n        initialValues= {{ username: '', email: '', password: '' }}\r\n        onSubmit = {handleSubmit}\r\n        validationSchema={RegisterSchema}\r\n      >\r\n        {() => (\r\n            <div className=\"register\">\r\n            <div className=\"wrap\">\r\n                <h1>Register</h1>\r\n                {data ? <span className=\"alert alert-info pb-2\">{data}</span> : null}\r\n                <Form>\r\n                    <Field type=\"text\" name=\"username\" placeholder=\"Your name\"/>\r\n                    <ErrorMessage name=\"username\" component=\"div\" className=\"alert alert-danger\"/>\r\n                    <Field type=\"email\" name=\"email\" placeholder=\"Your email\"/>\r\n                    <ErrorMessage name=\"email\" component=\"div\" className=\"alert alert-danger\"/>\r\n                    <Field type=\"password\" name=\"password\"  placeholder=\"Enter Password\"/>\r\n                    <ErrorMessage name=\"password\" component=\"div\" className=\"alert alert-danger\"/>\r\n                    <input type=\"submit\" value=\"Register\"/>\r\n                    <a href=\"/login\">\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                        <span></span>\r\n                        Login\r\n                    </a>\r\n               </Form>\r\n           </div>\r\n           </div>\r\n                             \r\n        )}\r\n      </Formik>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n/* <Formik\r\n        initialValues= {{ username: '', email: '', password: '' }}\r\n        onSubmit = {handleSubmit}\r\n        validationSchema={RegisterSchema}\r\n      >\r\n        {() => (\r\n         <div className=\"mt-4\">\r\n                 <section className=\"row\">\r\n                     <div className=\"col-12 d-flex align-items-center justify-content-center\">\r\n                         <div className=\"col-lg-4 col-md-8 col-10 box-shadow-2 p-0\">\r\n                             <div className=\"card border-grey border-lighten-3 px-1 py-1 m-0\">\r\n                                 <div className=\"card-header border-0 pb-0\">\r\n                                     <div className=\"card-title text-center\">\r\n                                         <h1>Register</h1>\r\n                                     </div>\r\n                                 </div>\r\n                                 <Form>\r\n                             <div className=\"form-group\">\r\n                             <Field type=\"text\" name=\"username\" className=\"form-control\" placeholder=\"Your name\" onKeyUp={e => setUserName(e.target.value)}/>\r\n                             <ErrorMessage name=\"username\" component=\"div\" className=\"alert alert-danger\"/>\r\n                             </div>\r\n                             <div className=\"form-group\">\r\n                             <Field type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Your email\" onKeyUp={e => setEmail(e.target.value)}/>\r\n                             <ErrorMessage name=\"email\" component=\"div\" className=\"alert alert-danger\"/>\r\n                             </div>\r\n                             <div className=\"form-group\">\r\n                             <Field type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Enter Password\" onKeyUp={e => setPassword(e.target.value)}/>\r\n                             <ErrorMessage name=\"password\" component=\"div\" className=\"alert alert-danger\"/>\r\n                             </div>\r\n                             <div className=\"card-body\">\r\n                             <button type=\"submit\" className=\"btn btn-outline-info btn-block\">Register</button>\r\n                             </div>\r\n                             <div className=\"card-body\">\r\n                                 <a href=\"/login\" className=\"btn btn-outline-danger btn-block\"><i className=\"ft-unlock\"></i>Login</a>\r\n                             </div>\r\n                                 </Form>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 </section>\r\n      </div>\r\n        )}\r\n      </Formik> */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* <div className=\"wrap\">\r\n                                 <Form>\r\n                             <Field type=\"text\" name=\"username\" placeholder=\"Your name\" onKeyUp={e => setUserName(e.target.value)}/>\r\n                             <ErrorMessage name=\"username\" component=\"div\" className=\"alert alert-danger\"/>\r\n                             <Field type=\"email\" name=\"email\" placeholder=\"Your email\" onKeyUp={e => setEmail(e.target.value)}/>\r\n                             <ErrorMessage name=\"email\" component=\"div\" className=\"alert alert-danger\"/>\r\n                             <Field type=\"password\" name=\"password\"  placeholder=\"Enter Password\" onKeyUp={e => setPassword(e.target.value)}/>\r\n                             <ErrorMessage name=\"password\" component=\"div\" className=\"alert alert-danger\"/>\r\n                            \r\n                             <input type=\"submit\" value=\"Register\"/>\r\n                            \r\n                                 <a href=\"/login\">Login</a>\r\n                                 </Form>\r\n                                 </div> */\r\n                         ","\r\nimport React from 'react'\r\nimport './HomePage.scss';\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <div className=\"home-page\">\r\n            hello world\r\n            <a href=\"/register\">h</a>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Route, Switch } from 'react-router-dom';\nimport { Login } from './components/Conn/Login';\nimport { Register } from './components/Conn/Register';\nimport  Home  from './components/Home/HomePage';\nimport { Dashboard } from './components/Dashboard';\nimport Context from './components/Conn/user.context';\n\n\nfunction App() {\n  const [username, setUsername] =useState('some@gmail.com');\n  const transfer =(user)=>{\n    setUsername(user);\n  }\n  return (\n      \n      <Switch>\n        <Context.Provider value={{user:username, cb: transfer}}>\n          <Route component={Home} exact path='/'/>\n          <Route component={Register} exact path='/register'/>\n          <Route component={Login} exact path='/login'/>\n          <Route component={Dashboard} exact path='/dashboard' />\n        </Context.Provider>\n      </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faCheckSquare, faCoffee, faUser, faEnvelope, faLock, faDivide, faUnlock, faUserClock, faUserEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\n \r\nlibrary.add(faCheckSquare, faCoffee, faUser, faEnvelope, faLock, faDivide, faUnlock, faUserClock, faUserEdit)\r\n\r\n\r\nexport const Dashboard = () => {\r\n  return(\r\n <div>\r\n   ופתחלנו שערי מזל נגן איתנו פתח לנו היכל \r\n    <FontAwesomeIcon icon=\"user\"/>\r\n  <FontAwesomeIcon icon=\"check-square\"/>\r\n  <FontAwesomeIcon icon=\"coffee\"/>\r\n  <FontAwesomeIcon icon=\"envelope\"/>\r\n  <FontAwesomeIcon icon=\"lock\"/>\r\n  <FontAwesomeIcon icon=\"divide\"/>\r\n  <FontAwesomeIcon icon=\"user-clock\"/>\r\n  <FontAwesomeIcon icon=\"user-edit\"/>\r\n </div>\r\n  )\r\n}\r\n  \r\n"],"sourceRoot":""}